image: alpine:latest
stages:
    - lint
    - test
    - bundle

before_script:
    - "wget https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz"
    - "tar -xzf helm-v3.5.4-linux-amd64.tar.gz"
    - "mv linux-amd64/helm /usr/local/bin/helm"
    - "helm version"
    - "wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz"
    - "tar xf kubeval-linux-amd64.tar.gz"
    - "mv kubeval /usr/local/bin"

lint:
    stage: lint
    script:
        - "helm lint vsftpd/"

perform_test:
    stage: test
    script:
        - "helm template vsftpd/"

validate:
    stage: test
    script:
        - "helm template vsftpd/ > helm-manifests.yml"
        - "kubeval helm-manifests.yml || true"

bundle:
    stage: bundle
    only:
        - "master"
    script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $(helm package vsftpd/ | cut -d: -f2) "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/vsftpd/$(cat vsftpd/Chart.yaml | grep version | cut -d: -f2 | tr -d [:space:])/vsftpd-$(cat vsftpd/Chart.yaml | grep version | cut -d: -f2 | tr -d [:space:]).tgz"'
release:
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    stage: bundle
    only:
        - "master"
    script:
        - echo "Release"
    release:
        tag_name: ${MAJOR}_${MINOR}_${REVISION}
        description: 'Release description'
    